apiVersion: v1
items:
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: sample-spring-boot
      template: sample-spring-boot
    name: argocd-pipeline-practice-java
  stringData:
    database-password: password
    database-user: freelancer
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: sample-spring-boot
      template: sample-spring-boot
    name: argocd-pipeline-practice-java
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: argocd-pipeline-practice-java
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: sample-spring-boot
      template: sample-spring-boot
    name: argocd-pipeline-practice-java
  spec:
    host: ""
    to:
      kind: Service
      name: argocd-pipeline-practice-java
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: sample-spring-boot
      template: sample-spring-boot
    name: argocd-pipeline-practice-java
  spec:
    replicas: 3
    selector:
      name: argocd-pipeline-practice-java
    strategy: null
    template:
      metadata:
        labels:
          name: argocd-pipeline-practice-java
        name: argocd-pipeline-practice-java
      spec:
        containers:
        - env:
          - name: PG_HOST
            value: argocd-postgresql
          - name: PG_DB
            value: freelancerdb
          - name: PG_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: argocd-pipeline-practice-java
          - name: PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: argocd-pipeline-practice-java
          image: image-registry.openshift-image-registry.svc:5000/user3-development/pipeline-practice-java:latest
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 3
          name: sample-spring-boot
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
    triggers:
    - type: ConfigChange
    type: Rolling
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the database server
    labels:
      app: sample-spring-boot
      template: sample-spring-boot
    name: argocd-postgresql
  spec:
    ports:
    - name: argocd-postgresql
      port: 5432
      targetPort: 5432
    selector:
      name: argocd-postgresql
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the database
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: sample-spring-boot
      template: sample-spring-boot
    name: argocd-postgresql
  spec:
    replicas: 1
    selector:
      name: argocd-postgresql
    strategy:
      recreateParams:
        post:
          execNewPod:
            command:
            - /bin/bash
            - -c
            - sleep 10 && curl https://raw.githubusercontent.com/mosuke5/openshift-pipeline-practice-java/master/etc/testdata.sql
              -o /tmp/testdata.sql && PGPASSWORD=password psql -U freelancer -d freelancerdb
              -h $ARGOCD_POSTGRESQL_SERVICE_HOST -f /tmp/testdata.sql
            containerName: argocd-postgresql
          failurePolicy: Abort
        timeoutSeconds: 600
      type: Recreate
    template:
      metadata:
        labels:
          name: argocd-postgresql
        name: argocd-postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: argocd-pipeline-practice-java
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: argocd-pipeline-practice-java
          - name: POSTGRESQL_DATABASE
            value: freelancerdb
          image: ' '
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: argocd-postgresql
          ports:
          - containerPort: 5432
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: argocd-postgresql-data
        volumes:
        - emptyDir: {}
          name: argocd-postgresql-data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - argocd-postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:10
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
kind: List
metadata: {}
